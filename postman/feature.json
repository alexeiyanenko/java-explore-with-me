{
	"info": {
		"_postman_id": "415c3545-9781-45b6-ba8b-8b13d6453983",
		"name": "Feature",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38693972"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "CreateUser",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Иван\",\r\n    \"email\": \"Ivan.petrov@practicum.mail.ru\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/admin/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateUser2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Олег\",\r\n    \"email\": \"Oleg.Bulochkin@practicum.mail.ru\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/admin/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Category",
			"item": [
				{
					"name": "CreteCategory",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Категория\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/admin/categories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateCategory2",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Категория2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/admin/categories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Events",
			"item": [
				{
					"name": "CreateEvents",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"annotation\": \"Это описание события, краткое, но ёмкое и полезное.\",\r\n  \"category\": 1,\r\n  \"description\": \"Это подробное описание события. Оно может быть достаточно длинным, чтобы поместить все детали и расписание.\",\r\n  \"eventDate\": \"2025-05-01 18:00:00\",\r\n  \"location\": {\r\n    \"lat\": 55.7558,\r\n    \"lon\": 37.6176\r\n  },\r\n  \"paid\": true,\r\n  \"participantLimit\": 10,\r\n  \"requestModeration\": true,\r\n  \"title\": \"Весенний фестиваль в Москве\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/138/events",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"138",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateEvent2",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"annotation\": \"Это описание события, краткое, но ёмкое и полезное.\",\r\n  \"category\": 2,\r\n  \"description\": \"Это подробное описание события. Оно может быть достаточно длинным, чтобы поместить все детали и расписание.\",\r\n  \"eventDate\": \"2025-05-01 13:00:00\",\r\n  \"location\": {\r\n    \"lat\": 33.7558,\r\n    \"lon\": 23.6176\r\n  },\r\n  \"paid\": true,\r\n  \"participantLimit\": 10,\r\n  \"requestModeration\": true,\r\n  \"title\": \"Другое собитые\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/139/events",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"139",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateEvent3",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"annotation\": \"Это описание события, краткое, но ёмкое и полезное.\",\r\n  \"category\": 2,\r\n  \"description\": \"Это подробное описание события. Оно может быть достаточно длинным, чтобы поместить все детали и расписание.\",\r\n  \"eventDate\": \"2025-05-01 10:00:00\",\r\n  \"location\": {\r\n    \"lat\": 73.7558,\r\n    \"lon\": 53.6176\r\n  },\r\n  \"paid\": true,\r\n  \"participantLimit\": 10,\r\n  \"requestModeration\": true,\r\n  \"title\": \"Другое собитые\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/139/events",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"139",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "patchEvent",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"stateAction\": \"PUBLISH_EVENT\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/admin/events/107",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"events",
								"107"
							]
						}
					},
					"response": []
				},
				{
					"name": "patchEvent2",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"stateAction\": \"PUBLISH_EVENT\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/admin/events/108",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"events",
								"108"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "CreateComments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное создание комментария: код 201, json с нужными полями\", function () {\r",
									"    pm.response.to.have.status(201);       \r",
									"    pm.response.to.be.withBody;            \r",
									"    pm.response.to.be.json;                \r",
									"\r",
									"    const jsonData = pm.response.json();\r",
									"\r",
									"    pm.expect(jsonData).to.have.property(\"id\");\r",
									"    pm.expect(jsonData).to.have.property(\"text\");\r",
									"    pm.expect(jsonData).to.have.property(\"created\");\r",
									"    pm.expect(jsonData).to.have.property(\"author\");\r",
									"    pm.expect(jsonData).to.have.property(\"eventId\");\r",
									"\r",
									"    pm.expect(jsonData.text).to.eql(\"Спасибо за классное событие!\");\r",
									"    pm.expect(jsonData.eventId).to.eql(108);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"text\": \"Спасибо за классное событие!\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/138/comments/108",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"138",
								"comments",
								"108"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Comment Fail User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Пользователь не найден, ожидался 404 Not Found\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    const error = pm.response.json();\r",
									"    pm.expect(error.message).to.include(\"user с id\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"text\": \"Спасибо за классное событие!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/99999/comments/108",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"99999",
								"comments",
								"108"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Comment Fail Text",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Пустой текст комментария, ожидался 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const error = pm.response.json();\r",
									"    pm.expect(error.errors[0]).to.include(\"text\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"text\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/138/comments/108",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"138",
								"comments",
								"108"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Comment Fail Event",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Событие не опубликовано, ожидался 409 Conflict\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"    const error = pm.response.json();\r",
									"    pm.expect(error.message).to.include(\"Событие еще не опубликовано\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"text\": \"Спасибо за классное событие!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/138/comments/109",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"138",
								"comments",
								"109"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Comment 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное создание комментария: код 201, json с нужными полями\", function () {\r",
									"    pm.response.to.have.status(201);       \r",
									"    pm.response.to.be.withBody;            \r",
									"    pm.response.to.be.json;                \r",
									"\r",
									"    const jsonData = pm.response.json();\r",
									"\r",
									"    pm.expect(jsonData).to.have.property(\"id\");\r",
									"    pm.expect(jsonData).to.have.property(\"text\");\r",
									"    pm.expect(jsonData).to.have.property(\"created\");\r",
									"    pm.expect(jsonData).to.have.property(\"author\");\r",
									"    pm.expect(jsonData).to.have.property(\"eventId\");\r",
									"\r",
									"    pm.expect(jsonData.text).to.eql(\"Спасибо за замечательное событие!\");\r",
									"    pm.expect(jsonData.eventId).to.eql(107);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"text\": \"Спасибо за замечательное событие!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/139/comments/107",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"139",
								"comments",
								"107"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Комментарий успешно обновлён\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"    const body = pm.response.json();\r",
									"    pm.expect(body).to.have.property(\"id\");\r",
									"    pm.expect(body.text).to.eql(\"Обновлённый текст комментария\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"text\": \"Обновлённый текст комментария\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/139/comments/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"139",
								"comments",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Comment Fail User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Пользователь не является автором комментария — 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"    const error = pm.response.json();\r",
									"    pm.expect(error.message).to.include(\"не является автором комментария\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"text\": \"Обновлённый текст комментария\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/138/comments/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"138",
								"comments",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Comment Fail Text",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Текст комментария некорректен — 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const error = pm.response.json();\r",
									"    pm.expect(error.errors[0]).to.include(\"text\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"text\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/139/comments/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"139",
								"comments",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Comment Fail Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Комментарий не найден — 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    const error = pm.response.json();\r",
									"    pm.expect(error.message).to.include(\"Comment с id\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"text\": \"Обновлённый текст комментария\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/139/comments/99999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"139",
								"comments",
								"99999"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Comment Fail User Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Пользователь не найден — 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    const error = pm.response.json();\r",
									"    pm.expect(error.message).to.include(\"user с id\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"text\": \"Обновлённый текст комментария\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/99999/comments/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"99999",
								"comments",
								"2"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Comment By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Комментарий получен успешно\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"id\");\r",
									"    pm.expect(json).to.have.property(\"text\");\r",
									"    pm.expect(json).to.have.property(\"created\");\r",
									"    pm.expect(json.author.id).to.eql(139);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/users/139/comments/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"139",
								"comments",
								"2"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Comment By Id Fail User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Пользователь не автор — должен быть 403 Forbidden\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"    const error = pm.response.json();\r",
									"    pm.expect(error.message).to.include(\"не является автором комментария\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/users/138/comments/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"138",
								"comments",
								"2"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Comment By Id Fail Comment Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Комментарий не найден — ожидается 404 Not Found\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    const error = pm.response.json();\r",
									"    pm.expect(error.message).to.include(\"Comment с id\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/users/138/comments/99999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"138",
								"comments",
								"99999"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Comment By Id Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Комментарий успешно найден (admin) — 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"id\");\r",
									"    pm.expect(json).to.have.property(\"text\");\r",
									"    pm.expect(json).to.have.property(\"created\");\r",
									"    pm.expect(json).to.have.property(\"author\");\r",
									"    pm.expect(json).to.have.property(\"eventId\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/admin/comments/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Comment By Id Admin Fail Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Комментарий не найден (admin) — 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    const error = pm.response.json();\r",
									"    pm.expect(error.message).to.include(\"Comment с id\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/admin/comments/9999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"comments",
								"9999"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateComment3",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"text\": \"Хочу оставить еще один комментарий!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/138/comments/108",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"138",
								"comments",
								"108"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateComment4",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"text\": \"Приходите на мое событие!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/138/comments/107",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"138",
								"comments",
								"107"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Comments By User Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное получение комментариев пользователя — 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"\r",
									"    const comments = pm.response.json();\r",
									"    pm.expect(comments).to.be.an(\"array\");\r",
									"    if (comments.length > 0) {\r",
									"        pm.expect(comments[0]).to.have.property(\"id\");\r",
									"        pm.expect(comments[0]).to.have.property(\"text\");\r",
									"        pm.expect(comments[0]).to.have.property(\"created\");\r",
									"        pm.expect(comments[0]).to.have.property(\"author\");\r",
									"        pm.expect(comments[0]).to.have.property(\"eventId\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/users/138/comments?from=0&size=10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"138",
								"comments"
							],
							"query": [
								{
									"key": "from",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Comments By Event Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешное получение комментариев по eventId\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"\r",
									"    const body = pm.response.json();\r",
									"    pm.expect(body).to.be.an(\"array\");\r",
									"\r",
									"    if (body.length > 0) {\r",
									"        const comment = body[0];\r",
									"        pm.expect(comment).to.have.property(\"id\");\r",
									"        pm.expect(comment).to.have.property(\"text\");\r",
									"        pm.expect(comment).to.have.property(\"created\");\r",
									"        pm.expect(comment).to.have.property(\"author\");\r",
									"        pm.expect(comment).to.have.property(\"eventId\", 108);\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/comments/108?from=0&size=10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"108"
							],
							"query": [
								{
									"key": "from",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Comments by Text",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Успешный поиск комментариев по тексту\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"\r",
									"    const body = pm.response.json();\r",
									"    pm.expect(body).to.be.an(\"array\");\r",
									"\r",
									"    if (body.length > 0) {\r",
									"        const comment = body[0];\r",
									"        pm.expect(comment).to.have.property(\"id\");\r",
									"        pm.expect(comment).to.have.property(\"text\");\r",
									"        pm.expect(comment.text.toLowerCase()).to.include(\"спасибо\");\r",
									"        pm.expect(comment).to.have.property(\"created\");\r",
									"        pm.expect(comment).to.have.property(\"author\");\r",
									"        pm.expect(comment).to.have.property(\"eventId\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/admin/comments/search?text=спасибо&from=0&size=10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"comments",
								"search"
							],
							"query": [
								{
									"key": "text",
									"value": "спасибо"
								},
								{
									"key": "from",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Comment By Text No Matches",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Комментариев не найдено по тексту — пустой массив\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    const result = pm.response.json();\r",
									"    pm.expect(result).to.be.an(\"array\").that.is.empty;\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/admin/comments/search?text=несуществующаяфраза",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"comments",
								"search"
							],
							"query": [
								{
									"key": "text",
									"value": "несуществующаяфраза"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Comment By Fail Text",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ошибка валидации — пустой текст\", function () {\r",
									"    pm.response.to.have.status(400); // ValidationException = BAD_REQUEST\r",
									"    const error = pm.response.json();\r",
									"    pm.expect(error.message).to.include(\"Текст поискового запроса не должен быть пустым\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/admin/comments/search?text=",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"comments",
								"search"
							],
							"query": [
								{
									"key": "text",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Comment Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Комментарий успешно удален — статус 200 или 204\", function () {\r",
									"    pm.expect(pm.response.code === 200 || pm.response.code === 204).to.be.true;\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/admin/comments/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"comments",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Comment Fail Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Комментарий не найден — 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    const error = pm.response.json();\r",
									"    pm.expect(error.message).to.include(\"Comment с id\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/admin/comments/99999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"comments",
								"99999"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Comment By User Id Fail User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Пользователь не является автором — статус 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"    const error = pm.response.json();\r",
									"    pm.expect(error.message).to.include(\"не является автором комментария\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/users/139/comments/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"139",
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Комментарий не найден — статус 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    const error = pm.response.json();\r",
									"    pm.expect(error.message).to.include(\"Comment с id\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/users/139/comments/99999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"139",
								"comments",
								"99999"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Comment By User Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Комментарий успешно удален пользователем — статус 200 или 204\", function () {\r",
									"    pm.expect(pm.response.code === 200 || pm.response.code === 204).to.be.true;\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/users/138/comments/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"138",
								"comments",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}